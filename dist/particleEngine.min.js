/*! particleEngine 26-12-2014 */
!function(a){"use strict";var b=(a.document||{},function(a){function b(a){for(var c=Array.prototype.slice.call(arguments),d=1;d<c.length;d++)for(var e in c[d])c[d].hasOwnProperty(e)&&("object"==typeof c[d][e]&&c[d][e]instanceof Array==!1?(a[e]={},b(a[e],c[d][e])):a[e]=c[d][e]);return a}function c(a){var b=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(a);return b?{r:parseInt(b[1],16),g:parseInt(b[2],16),b:parseInt(b[3],16)}:null}function d(a,b){return a+Math.random()*(b-a)}function e(a){if(a.direction=d(a.direction,a.spread),a.speed.x+=Math.random()*a.speed.spread,a.speed.y+=Math.random()*a.speed.spread,a.size.x+=Math.random()*a.size.spread,a.size.y+=Math.random()*a.size.spread,"string"==typeof a.color){var b=c(a.color);a.color=[b.r,b.g,b.b]}return a.color=a.color.map(Math.floor),a}if("undefined"==typeof a)throw new Error("particles must be defined with a canvas context");var f=a,g={fountain:function(){console.log("fountain")},explosion:function(){console.log("explosion")},stream:function(){console.log("stream")},test:function(){var a=0;if(this.numParticles()<this.properties.max&&this.properties.finished===!1)for(;a++<this.properties.density;)this.addParticle()}},h={snow:{},rain:{},fire:{},ice:{},smoke:{},test:{direction:7*Math.PI/4,spread:5*Math.PI/4,color:[0,0,0],speed:{x:.5,y:.5,spread:2},alpha:1,size:{x:1,y:1,spread:4},decay:Math.sqrt(f.canvas.width*f.canvas.width+f.canvas.height*f.canvas.height)/2}},i={weight:0,direction:0,spread:0,position:{x:0,y:0},speed:{x:0,y:0,spread:0},color:[],size:{height:0,width:0,spread:0},sprite:!1,shape:!1,alpha:0,decay:0},j={max:100,density:1,finished:!1,stopped:!1},k=function(a,c){if("undefined"==typeof a)throw new Error("Emitter needs to be passed to a collection");var h=g[a.behavior],k=[],l=b({},j,c);return{properties:l,emitter:a,emitterFunction:h,addParticle:function(){if(this.properties.stopped===!1){var c=b({},i,a.particle);c=e(c);var f={x:a.properties.origin.x*d(1,a.properties.width),y:a.properties.origin.y*d(1,a.properties.height)};b(c.position,f),k.push(c)}},numParticles:function(){return k.length},draw:function(){this.emitterFunction();var b,c=0;for(k.length;b=k[c];c++){b.position.x+=b.speed.x*Math.cos(b.direction),b.position.y-=b.speed.y*b.speed.y*Math.sin(b.direction);var d=b.position.x-a.properties.origin.x,e=b.position.y-a.properties.origin.y,g=Math.sqrt(d*d+e*e);b.alpha=1-g/b.decay,b.alpha<=0&&k.splice(c,1),f.fillStyle="rgba("+b.color.join()+","+b.alpha+")",f.beginPath(),f.arc(b.position.x,b.position.y,b.size.x*b.size.y/2,0,2*Math.PI,!0),f.closePath(),f.fill()}}}},l=function(a,c,d){var e,f,i={origin:{x:0,y:0},height:1,width:1};if(b({},i,d),"string"==typeof a){if(e=h[a],"undefined"==typeof h[a])throw new Error(a+" Does not exist")}else{if("undefined"==typeof a)throw new Error("Undefined particle type");e=a}if("string"==typeof c){if(f=c,"undefined"==typeof g[c])throw new Error(c+" Does not exist")}else{if("undefined"==typeof c||"function"!==c)throw new Error("Undefined emitter function");f=c}return{properties:i,particle:e,behavior:f,setOrigin:function(a,b){this.properties.origin.x=a,this.properties.origin.y=b}}};return{collection:k,emitter:l,updateContext:function(a){f=a}}});b.VERSION="0.1.0",a.particles=b}(this);